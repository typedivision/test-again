#!/bin/bash
#############################################################################
distribution_usage () {
printf "%s" "\
usage: distribution [-h] IMAGE [SHELL] [ARGS...]

  Test ts on the specified image and shell.

options:

  -d          start a debug shell
  -h          prints help

"
}
args=""
while [ $OPTIND -le $# ]
do
  if getopts "dh" option
  then
    case $option in
      (d) mode=debug ;;
      (h) distribution_usage
          exit 0 ;;
      (*) distribution_usage | head -n 1
          exit 2 ;;
    esac
  else
    args="$args \"\${$OPTIND}\"" 
    OPTIND=$(($OPTIND + 1))
  fi
done
eval set -- "$args"
mode="${mode:-test}"

#############################################################################

image="$1"
shift 1

shell="${1:-/bin/sh}"
shift 1

if [ "$mode" == "test" ]
then

# Switch /bin/sh so that all scripts will pick up the target shell as a part
# of shebang usage.  Assumes root user.  This is obviously a bad thing to do
# generally, but probably is ok since these containers immediately go away.
docker run --rm -v $PWD:/tmp/ts -w /tmp/ts -i "$image" /bin/sh <<DOC
if [ "$shell" != /bin/sh ]
then ln -sf "$shell" /bin/sh
fi
./test/suite "$@"
DOC

else

if [ "$shell" != /bin/sh ]
then printf "# %s\n" "copy-paste the following to set the shell..."  "ln -sf $shell /bin/sh"
fi
docker run -v $PWD:/tmp/ts -w /tmp/ts -it "$image" /bin/sh 

fi

